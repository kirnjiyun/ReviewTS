{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\\\uD560\\uBBF8\\uC0C8\\uC0AC\\uCD0C\\\\todolist\\\\src\\\\ToggleTodo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ToggleTodo({\n  id,\n  setTodoList\n}) {\n  _s();\n  const onToggleTodo = event => {};\n  useEffect(() => {}, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      onChange: event => onToggleTodo(event)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(ToggleTodo, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = ToggleTodo;\nvar _c;\n$RefreshReg$(_c, \"ToggleTodo\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","ToggleTodo","id","setTodoList","_s","onToggleTodo","event","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/할미새사촌/todolist/src/ToggleTodo.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\n\r\nexport default function ToggleTodo({ id, setTodoList }) {\r\n  const onToggleTodo = (event) => {};\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  return (\r\n    <>\r\n      <input type='checkbox' onChange={(event) => onToggleTodo(event)} />\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEzC,eAAe,SAASC,UAAUA,CAAC;EAAEC,EAAE;EAAEC;AAAY,CAAC,EAAE;EAAAC,EAAA;EACtD,MAAMC,YAAY,GAAIC,KAAK,IAAK,CAAC,CAAC;EAElCV,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC;EAEvB,oBACEE,OAAA,CAAAE,SAAA;IAAAO,QAAA,eACET,OAAA;MAAOU,IAAI,EAAC,UAAU;MAACC,QAAQ,EAAGH,KAAK,IAAKD,YAAY,CAACC,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBACnE,CAAC;AAEP;AAACT,EAAA,CAVuBH,UAAU;AAAAa,EAAA,GAAVb,UAAU;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}